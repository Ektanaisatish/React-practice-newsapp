{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab141/Desktop/react/newsapp/src/components/Login.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\n// //import { authActions } from \"../store\";\n// //import { API_BASE_URL } from \"../config/Constants\";\n// import toast from \"react-hot-toast\";\n// import { useForm } from \"react-hook-form\";\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import Alert from 'react-bootstrap/Alert';\n\n// export const Auth = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors: formErrors },\n//   } = useForm();\n//   const [inputs, setInputs] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [signupSuccess, setSignupSuccess] = useState(false);\n\n//   const handleChange = (e) => {\n//     e.preventDefault();\n//     setInputs((prevState) => ({\n//       ...prevState,\n//       [e.target.name]: e.target.value,\n//     }));\n//   };\n\n//   const sendRequest = async (data, type = \"login\") => {\n//     try {\n//       const res = await axios.post(`${API_BASE_URL}/${type}`, {\n//         name: data.name,\n//         email: data.email,\n//         password: data.password,\n//       });\n//       return res.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const errorMessage = error.response.data.message;\n//         if (errorMessage === \"Invalid email\") {\n//           toast.error(\"Invalid email\");\n//         } else if (errorMessage === \"Invalid password\") {\n//           toast.error(\"Password is incorrect\");\n//         } else if (errorMessage === \"Username or Password not present\") {\n//           toast.error(\"Username or Password not present\");\n//         }\n//       }\n//     }\n//   };\n\n//   const onSubmit = async (data1) => {\n//     if (isSignup) {\n//       const data = await sendRequest(data1, \"signup\");\n//       if (data) {\n//         setSignupSuccess(true);\n//         toast.success(\"Successfully signed up.\");\n//       }\n//     } else {\n//       const data = await sendRequest(data1);\n//       if (data) {\n//         localStorage.setItem(\"userId\", data.user._id);\n//         dispatch(authActions.login());\n//         navigate(\"/blogs\");\n//         toast.success(\"Login Successfully\");\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Form onSubmit={handleSubmit(onSubmit)}>\n//         <div className='container'>\n//           <Form.Group controlId=\"formBasicName\">\n//             {isSignup && (\n//               <>\n//                 <Form.Label>Name</Form.Label>\n//                 <Form.Control \n//                   type=\"text\" \n//                   placeholder=\"Enter your name\" \n//                   onChange={handleChange}\n//                   {...register(\"name\", { required: \"Name is required\" })}\n//                 />\n//                 <Alert variant=\"danger\">{formErrors.name?.message}</Alert>\n//               </>\n//             )}\n//           </Form.Group>\n\n//           <Form.Group controlId=\"formBasicEmail\">\n//             <Form.Label>Email address</Form.Label>\n//             <Form.Control \n//               type=\"email\" \n//               placeholder=\"Enter email\" \n//               onChange={handleChange}\n//               {...register(\"email\", {\n//                 required: \"Email is required\",\n//                 pattern: {\n//                   value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n//                   message: \"This email is not valid\",\n//                 },\n//               })}\n//             />\n//             <Alert variant=\"danger\">{formErrors.email?.message}</Alert>\n//           </Form.Group>\n\n//           <Form.Group controlId=\"formBasicPassword\">\n//             <Form.Label>Password</Form.Label>\n//             <Form.Control \n//               type=\"password\" \n//               placeholder=\"Password\" \n//               onChange={handleChange}\n//               {...register(\"password\", {\n//                 required: \"Password is required\",\n//                 minLength: {\n//                   value: 4,\n//                   message: \"Minimum length of password is 4\",\n//                 },\n//                 maxLength: {\n//                   value: 8,\n//                   message: \"Maximum length of password is 8\",\n//                 },\n//               })}\n//             />\n//             <Alert variant=\"danger\">{formErrors.password?.message}</Alert>\n//           </Form.Group>\n\n//           <Button variant=\"primary\" type=\"submit\">\n//             Submit\n//           </Button>\n\n//           <Button onClick={() => setIsSignup(!isSignup)} variant=\"secondary\">\n//             Change to {isSignup ? \"Login\" : \"Signup\"}\n//           </Button>\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default Auth;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [text, setText] = useState();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.prevent.Default();\n    setText(\"enter\");\n  };\n  const handleChange = e => {\n    console.log(\"on change\");\n    setText(e.target.value);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleInputEmail1\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleChange,\n            className: \"form-control\",\n            id: \"exampleInputEmail1\",\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleInputPassword1\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handleChange,\n            className: \"form-control\",\n            id: \"exampleInputPassword1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this);\n  };\n}\n_s(Login, \"PUkHgD6xzYGtkUVCu/nQbeDApAA=\");\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log(email);\n//     console.log(password)\n//     // Handle form submission logic here\n//   };\n\n//   const handleEmailChange = (event) => {\n//     setEmail(event.target.value);\n\n//   };\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n//   return (\n//     <div className='container'>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//           <input type=\"email\" value={email} onChange={handleEmailChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//           <input type=\"password\" value={password} onChange={handlePasswordChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","text","setText","email","setEmail","password","setPassword","handleSubmit","e","prevent","Default","handleChange","console","log","target","value","className","children","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","_c","$RefreshReg$"],"sources":["/Users/ztlab141/Desktop/react/newsapp/src/components/Login.js"],"sourcesContent":["// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\n// //import { authActions } from \"../store\";\n// //import { API_BASE_URL } from \"../config/Constants\";\n// import toast from \"react-hot-toast\";\n// import { useForm } from \"react-hook-form\";\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import Alert from 'react-bootstrap/Alert';\n\n// export const Auth = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors: formErrors },\n//   } = useForm();\n//   const [inputs, setInputs] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [signupSuccess, setSignupSuccess] = useState(false);\n\n//   const handleChange = (e) => {\n//     e.preventDefault();\n//     setInputs((prevState) => ({\n//       ...prevState,\n//       [e.target.name]: e.target.value,\n//     }));\n//   };\n\n//   const sendRequest = async (data, type = \"login\") => {\n//     try {\n//       const res = await axios.post(`${API_BASE_URL}/${type}`, {\n//         name: data.name,\n//         email: data.email,\n//         password: data.password,\n//       });\n//       return res.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const errorMessage = error.response.data.message;\n//         if (errorMessage === \"Invalid email\") {\n//           toast.error(\"Invalid email\");\n//         } else if (errorMessage === \"Invalid password\") {\n//           toast.error(\"Password is incorrect\");\n//         } else if (errorMessage === \"Username or Password not present\") {\n//           toast.error(\"Username or Password not present\");\n//         }\n//       }\n//     }\n//   };\n\n//   const onSubmit = async (data1) => {\n//     if (isSignup) {\n//       const data = await sendRequest(data1, \"signup\");\n//       if (data) {\n//         setSignupSuccess(true);\n//         toast.success(\"Successfully signed up.\");\n//       }\n//     } else {\n//       const data = await sendRequest(data1);\n//       if (data) {\n//         localStorage.setItem(\"userId\", data.user._id);\n//         dispatch(authActions.login());\n//         navigate(\"/blogs\");\n//         toast.success(\"Login Successfully\");\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Form onSubmit={handleSubmit(onSubmit)}>\n//         <div className='container'>\n//           <Form.Group controlId=\"formBasicName\">\n//             {isSignup && (\n//               <>\n//                 <Form.Label>Name</Form.Label>\n//                 <Form.Control \n//                   type=\"text\" \n//                   placeholder=\"Enter your name\" \n//                   onChange={handleChange}\n//                   {...register(\"name\", { required: \"Name is required\" })}\n//                 />\n//                 <Alert variant=\"danger\">{formErrors.name?.message}</Alert>\n//               </>\n//             )}\n//           </Form.Group>\n\n//           <Form.Group controlId=\"formBasicEmail\">\n//             <Form.Label>Email address</Form.Label>\n//             <Form.Control \n//               type=\"email\" \n//               placeholder=\"Enter email\" \n//               onChange={handleChange}\n//               {...register(\"email\", {\n//                 required: \"Email is required\",\n//                 pattern: {\n//                   value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n//                   message: \"This email is not valid\",\n//                 },\n//               })}\n//             />\n//             <Alert variant=\"danger\">{formErrors.email?.message}</Alert>\n//           </Form.Group>\n\n//           <Form.Group controlId=\"formBasicPassword\">\n//             <Form.Label>Password</Form.Label>\n//             <Form.Control \n//               type=\"password\" \n//               placeholder=\"Password\" \n//               onChange={handleChange}\n//               {...register(\"password\", {\n//                 required: \"Password is required\",\n//                 minLength: {\n//                   value: 4,\n//                   message: \"Minimum length of password is 4\",\n//                 },\n//                 maxLength: {\n//                   value: 8,\n//                   message: \"Maximum length of password is 8\",\n//                 },\n//               })}\n//             />\n//             <Alert variant=\"danger\">{formErrors.password?.message}</Alert>\n//           </Form.Group>\n\n//           <Button variant=\"primary\" type=\"submit\">\n//             Submit\n//           </Button>\n\n//           <Button onClick={() => setIsSignup(!isSignup)} variant=\"secondary\">\n//             Change to {isSignup ? \"Login\" : \"Signup\"}\n//           </Button>\n//         </div>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default Auth;\n\n\n\n\nimport React, { useState } from 'react'\n\nfunction Login() {\n    const[text,setText]=useState()\n    const [email,setEmail]=useState('')\n    const [password,setPassword]=useState('')\n    const handleSubmit=(e)=>{\n    e.prevent.Default(); \n    \n  setText(\"enter\")}  \n    const handleChange=(e)=>{\n      console.log(\"on change\")\n   setText(e.target.value);\n\n\n  return (\n    <div className='container'>\n        <form onSubmit={handleSubmit}>\n    <div className=\"mb-3\">\n      <label for=\"exampleInputEmail1\"  className=\"form-label\">Email address</label>\n      <input type=\"email\" value={email} onChange={handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n    </div>\n    <div className=\"mb-3\">\n      <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n      <input type=\"password\" value={password} onChange={handleChange}  className=\"form-control\" id=\"exampleInputPassword1\"/>\n    </div>\n    <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\n  </form></div>\n  )\n}}\nexport default Login\n\n// import React, { useState } from 'react';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log(email);\n//     console.log(password)\n//     // Handle form submission logic here\n//   };\n\n//   const handleEmailChange = (event) => {\n//     setEmail(event.target.value);\n    \n//   };\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n//   return (\n//     <div className='container'>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n//           <input type=\"email\" value={email} onChange={handleEmailChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n//         </div>\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n//           <input type=\"password\" value={password} onChange={handlePasswordChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default Login;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACS,QAAQ,EAACC,WAAW,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMW,YAAY,GAAEC,CAAC,IAAG;IACxBA,CAAC,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IAErBR,OAAO,CAAC,OAAO,CAAC;EAAA,CAAC;EACf,MAAMS,YAAY,GAAEH,CAAC,IAAG;IACtBI,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC3BX,OAAO,CAACM,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;IAGxB,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBnB,OAAA;QAAMoB,QAAQ,EAAEX,YAAa;QAAAU,QAAA,gBACjCnB,OAAA;UAAKkB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBnB,OAAA;YAAOqB,GAAG,EAAC,oBAAoB;YAAEH,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7EzB,OAAA;YAAO0B,IAAI,EAAC,OAAO;YAACT,KAAK,EAAEZ,KAAM;YAACsB,QAAQ,EAAEd,YAAa;YAACK,SAAS,EAAC,cAAc;YAACU,EAAE,EAAC,oBAAoB;YAAC,oBAAiB;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtI,CAAC,eACNzB,OAAA;UAAKkB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBnB,OAAA;YAAOqB,GAAG,EAAC,uBAAuB;YAACH,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1EzB,OAAA;YAAO0B,IAAI,EAAC,UAAU;YAACT,KAAK,EAAEV,QAAS;YAACoB,QAAQ,EAAEd,YAAa;YAAEK,SAAS,EAAC,cAAc;YAACU,EAAE,EAAC;UAAuB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnH,CAAC,eACNzB,OAAA;UAAQ0B,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEf,CAAC;AAAA;AAACvB,EAAA,CA3BOD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA4Bd,eAAeA,KAAK;;AAEpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}