{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab141/Desktop/react/newsapp/src/Appp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Appp() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HOC, {\n      cmp: Counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Appp;\nfunction HOC(props) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    style: {\n      backgroundColor: \"red\",\n      width: 100\n    },\n    children: props.cmp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c2 = HOC;\nfunction Counter() {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c3 = Counter;\nexport default Appp;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Appp\");\n$RefreshReg$(_c2, \"HOC\");\n$RefreshReg$(_c3, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Appp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","HOC","cmp","Counter","_c","props","style","backgroundColor","width","_c2","_s","count","setCount","onClick","_c3","$RefreshReg$"],"sources":["/Users/ztlab141/Desktop/react/newsapp/src/Appp.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Appp() {\n  return (\n    <div className=\"container\">\n      {/* <Counter/>\n         <Counter/> */}\n      <h1>HOC</h1>\n      <HOC cmp={Counter} />\n    </div>\n  );\n}\nfunction HOC(props) {\n  return <h2 style={{ backgroundColor: \"red\",width:100 }}>{props.cmp}</h2>;\n}\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <h3>{count}</h3>\n      <button onClick={() => setCount(count + 1)}>Update</button>\n    </div>\n  );\n}\nexport default Appp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EACd,oBACED,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAGxBH,OAAA;MAAAG,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZP,OAAA,CAACQ,GAAG;MAACC,GAAG,EAAEC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACI,EAAA,GATQV,IAAI;AAUb,SAASO,GAAGA,CAACI,KAAK,EAAE;EAClB,oBAAOZ,OAAA;IAAIa,KAAK,EAAE;MAAEC,eAAe,EAAE,KAAK;MAACC,KAAK,EAAC;IAAI,CAAE;IAAAZ,QAAA,EAAES,KAAK,CAACH;EAAG;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC1E;AAACS,GAAA,GAFQR,GAAG;AAGZ,SAASE,OAAOA,CAAA,EAAG;EAAAO,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACrC,oBACEE,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAKe;IAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBP,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAf,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACU,EAAA,CARQP,OAAO;AAAAW,GAAA,GAAPX,OAAO;AAShB,eAAeT,IAAI;AAAC,IAAAU,EAAA,EAAAK,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}